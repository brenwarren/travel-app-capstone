(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(){document.getElementById("generate").addEventListener("click",l),document.getElementById("savePdf").addEventListener("click",u)}e.d({},{w:()=>l,_:()=>u}),document.addEventListener("DOMContentLoaded",(()=>{t()}));const n="http://api.geonames.org/searchJSON?q=",o="brenwarren",a=async(e,t,n,o="")=>{try{const a=o?`&country=${o}`:"",r=await fetch(`${e}${t}${a}&username=${n}`);if(!r.ok)throw new Error(`HTTP error! Status: ${r.status}`);return await r.json()}catch(e){throw console.error("Error in getCityData:",e),e}},r=async(e,t)=>{try{const n=await fetch(`https://api.weatherbit.io/v2.0/forecast/daily?lat=${e}&lon=${t}&key=d014c41fae424c64b0cce23415dfbe50`);if(!n.ok)throw new Error(`HTTP error! Status: ${n.status}`);return await n.json()}catch(e){throw console.error("Error in getWeatherData:",e),e}},c="https://pixabay.com/get/g2cc98a597eccf2c54efa13514f4980846b466946bae1a891b89dc8fb0536dee36c5b13af2ca9efbe80455b490ea13af3_640.png",s=async(e,t)=>{const n=await(async(e,t="")=>{try{const n=`https://pixabay.com/api/?key=49556284-b1f2685ca2dc73e5108449d7c&q=${t?`${e}+${t.replace(/\s+/g,"_")}`:e}&image_type=photo`;console.log("Pixabay API Request URL:",n);const o=await fetch(n);if(!o.ok)throw new Error(`HTTP error! Status: ${o.status}`);const a=await o.json();return a.hits&&a.hits.length>0?a.hits[0].webformatURL:(console.warn("No images found for the given query."),null)}catch(e){return console.error("Error fetching image from Pixabay:",e),null}})(e,t),o=document.getElementById("travelImage");n?(o.src=n,o.alt=`Image of ${e}, ${t}`):(console.warn("No image found, using default image."),o.src=c)},d=async()=>{const e=await fetch("/all");try{const t=await e.json();console.log("Fetched Data from Server:",t),document.getElementById("cityName").innerHTML=`City: ${t.city||"N/A"}`,document.getElementById("travelDateOutput").innerHTML=`Travel Date: ${t.travelDate||"N/A"}`,document.getElementById("country").innerHTML=`Country: ${t.country||"N/A"}`,document.getElementById("longitude").innerHTML=`Longitude: ${t.longitude||"N/A"}`,document.getElementById("latitude").innerHTML=`Latitude: ${t.latitude||"N/A"}`,document.getElementById("userResponse").innerHTML=`Todo's and comments: ${t.userResponse||"N/A"}`}catch(e){console.log("Error updating UI:",e)}},i=async(e="",t={})=>{const n=await fetch(e,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});try{const e=await n.json();return console.log("Data sent to server:",e),e}catch(e){console.log("Error:",e)}};function l(e){const t=document.getElementById("city").value,c=document.getElementById("countryInput").value,l=document.getElementById("travelDate").value,u=document.getElementById("feelings").value;/^\d{2}-\d{2}-\d{4}$/.test(l)?(console.log(`City: ${t}, Country: ${c}, Travel Date: ${l}, Feelings: ${u}`),a(n,t,o,c).then((function(e){if(e&&e.geonames&&e.geonames.length>0){const{lng:n,lat:o,countryName:a}=e.geonames[0];console.log(`Fetched from API - Longitude: ${n}, Latitude: ${o}, Country: ${a}`),s(t,a||"");const c={city:t,travelDate:l,feelings:u,longitude:n,latitude:o,country:a};return console.log("Data to be sent to server:",c),r(o,n).then((e=>{const t=new Date(l.split("-").reverse().join("-")),n=new Date;if(Math.ceil((t-n)/864e5)>7)document.getElementById("weatherOutput").innerHTML="Weather information not available for dates more than one week from now.";else{const n=e.data.find((e=>e.datetime===t.toISOString().split("T")[0]));document.getElementById("weatherOutput").innerHTML=n?`\n                                Weather Forecast: ${n.weather.description}<br>\n                                Temperature: ${n.temp}Â°C\n                            `:"No weather data available for the selected date."}return i("/add",c)}))}console.error("No location data found in the API response:",e),alert("Unable to retrieve location data. Please try again.")})).then((()=>{console.log("Data successfully sent to the server."),d(),s(t,c)})).catch((function(e){console.error("Error fetching city data:",e.message||e),alert("An error occurred while fetching city data. Please try again.")}))):alert("Please enter a valid date in the format dd-mm-yyyy")}function u(){if(!window.jspdf||!window.jspdf.jsPDF)return console.error("jsPDF is not loaded correctly."),void alert("PDF generation failed. Please ensure jsPDF is loaded.");const{jsPDF:e}=window.jspdf,t=new e,n=document.getElementById("cityName").innerText,o=document.getElementById("travelDateOutput").innerText,a=document.getElementById("country").innerText,r=document.getElementById("longitude").innerText,c=document.getElementById("latitude").innerText,s=document.getElementById("weatherOutput").innerText,d=document.getElementById("userResponse").innerText;t.text("Travel Summary",10,10),t.text(`City: ${n}`,10,20),t.text(`Travel Date: ${o}`,10,30),t.text(`Country: ${a}`,10,40),t.text(`Longitude: ${r}`,10,50),t.text(`Latitude: ${c}`,10,60),t.text(`Weather: ${s}`,10,70),t.text(`Comments: ${d}`,10,80),t.save("Travel_Summary.pdf")}document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("travelImage");e&&(e.src=c)})),t(),document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("savePdf"),t=document.getElementById("entryHolder");e.style.display="none",new MutationObserver((()=>{""!==t.innerText.trim()?e.style.display="block":e.style.display="none"})).observe(t,{childList:!0,subtree:!0,characterData:!0})}))})();